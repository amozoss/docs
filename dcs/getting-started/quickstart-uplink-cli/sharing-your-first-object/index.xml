<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sharing Your First Object on Storj Docs</title><link>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/</link><description>Recent content in Sharing Your First Object on Storj Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/prerequisites/</guid><description>Prerequisites # You need to have the satellite account and installed Uplink CLI.
If you have followed the previous tutorial, you already have a cakes bucket. If you don&amp;rsquo;t, simply create it and re-upload using the following command:
Windows ./uplink.exe mb sj://cakes Linux uplink mb sj://cakes macOS uplink mb sj://cakes Let&amp;rsquo;s (re)upload our cheesecake image:
Windows ./uplink.exe cp ~/Desktop/cheesecake.jpg sj://cakes Linux uplink cp ~/Desktop/cheesecake.jpg sj://cakes macOS uplink cp ~/Desktop/cheesecake.</description></item><item><title>Create an Access to an Object</title><link>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/generate-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/generate-access/</guid><description>Create an Access to an Object # There are two ways to share access to an object:
by link sharing by importing the access using uplink CLI In both cases, you can create an access using the uplink share command. For example:
Windows ./uplink.exe share sj://cakes/cheesecake.jpg --export-to cheesecake.access Linux uplink share sj://cakes/cheesecake.jpg --export-to cheesecake.access macOS uplink share sj://cakes/cheesecake.jpg --export-to cheesecake.access An access generated using uplink share with no arguments creates an access to your entire project with read permissions.</description></item><item><title>Import an Access to an Object</title><link>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/import-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/import-access/</guid><description>Import an Access to an Object # Importing an access is done using the import command.
Import from the file # Windows ./uplink.exe access import cheesecake cheesecake.access Linux uplink access import cheesecake ~/cheesecake.access macOS uplink access import cheesecake ~/cheesecake.access This should give you the following output:
Import from the input # Windows ./uplink.exe access import cheesecake 14dfgh....qr Linux uplink access import cheesecake 14dfgh....qr macOS uplink access import cheesecake 14dfgh.</description></item><item><title>Revoke an Access to an Object</title><link>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/revoke-an-access-to-an-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/dcs/getting-started/quickstart-uplink-cli/sharing-your-first-object/revoke-an-access-to-an-object/</guid><description>Revoke an Access to an Object # You can revoke an access grant to an object at any time with the command uplink revoke.
Windows ./uplink.exe revoke asdfRF... Linux uplink revoke asdfRF... macOS uplink revoke asdfRF... The access will be revoked permanently for this parent access grant.
If you want to share this content again you should create a new access grant through the web interface.
Revoke a named access grant # Windows .</description></item></channel></rss>